{
  "version": 3,
  "sources": ["../../ed25519-hd-key/dist/utils.js", "../../ed25519-hd-key/dist/index.js"],
  "sourcesContent": ["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.replaceDerive = exports.pathRegex = void 0;\nexports.pathRegex = new RegExp(\"^m(\\\\/[0-9]+')+$\");\nexports.replaceDerive = (val) => val.replace(\"'\", '');\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.derivePath = exports.isValidPath = exports.getPublicKey = exports.CKDPriv = exports.getMasterKeyFromSeed = void 0;\nconst createHmac = require(\"create-hmac\");\nconst nacl = require(\"tweetnacl\");\nconst utils_1 = require(\"./utils\");\nconst ED25519_CURVE = 'ed25519 seed';\nconst HARDENED_OFFSET = 0x80000000;\nexports.getMasterKeyFromSeed = (seed) => {\n    const hmac = createHmac('sha512', ED25519_CURVE);\n    const I = hmac.update(Buffer.from(seed, 'hex')).digest();\n    const IL = I.slice(0, 32);\n    const IR = I.slice(32);\n    return {\n        key: IL,\n        chainCode: IR,\n    };\n};\nexports.CKDPriv = ({ key, chainCode }, index) => {\n    const indexBuffer = Buffer.allocUnsafe(4);\n    indexBuffer.writeUInt32BE(index, 0);\n    const data = Buffer.concat([Buffer.alloc(1, 0), key, indexBuffer]);\n    const I = createHmac('sha512', chainCode)\n        .update(data)\n        .digest();\n    const IL = I.slice(0, 32);\n    const IR = I.slice(32);\n    return {\n        key: IL,\n        chainCode: IR,\n    };\n};\nexports.getPublicKey = (privateKey, withZeroByte = true) => {\n    const keyPair = nacl.sign.keyPair.fromSeed(privateKey);\n    const signPk = keyPair.secretKey.subarray(32);\n    const zero = Buffer.alloc(1, 0);\n    return withZeroByte ?\n        Buffer.concat([zero, Buffer.from(signPk)]) :\n        Buffer.from(signPk);\n};\nexports.isValidPath = (path) => {\n    if (!utils_1.pathRegex.test(path)) {\n        return false;\n    }\n    return !path\n        .split('/')\n        .slice(1)\n        .map(utils_1.replaceDerive)\n        .some(isNaN);\n};\nexports.derivePath = (path, seed, offset = HARDENED_OFFSET) => {\n    if (!exports.isValidPath(path)) {\n        throw new Error('Invalid derivation path');\n    }\n    const { key, chainCode } = exports.getMasterKeyFromSeed(seed);\n    const segments = path\n        .split('/')\n        .slice(1)\n        .map(utils_1.replaceDerive)\n        .map(el => parseInt(el, 10));\n    return segments.reduce((parentKeys, segment) => exports.CKDPriv(parentKeys, segment + offset), { key, chainCode });\n};\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,gBAAgB,QAAQ,YAAY;AAC5C,YAAQ,YAAY,IAAI,OAAO,kBAAkB;AACjD,YAAQ,gBAAgB,CAAC,QAAQ,IAAI,QAAQ,KAAK,EAAE;AAAA;AAAA;;;ACJpD;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,aAAa,QAAQ,cAAc,QAAQ,eAAe,QAAQ,UAAU,QAAQ,uBAAuB;AACnH,QAAM,aAAa;AACnB,QAAM,OAAO;AACb,QAAM,UAAU;AAChB,QAAM,gBAAgB;AACtB,QAAM,kBAAkB;AACxB,YAAQ,uBAAuB,CAAC,SAAS;AACrC,YAAM,OAAO,WAAW,UAAU,aAAa;AAC/C,YAAM,IAAI,KAAK,OAAO,OAAO,KAAK,MAAM,KAAK,CAAC,EAAE,OAAO;AACvD,YAAM,KAAK,EAAE,MAAM,GAAG,EAAE;AACxB,YAAM,KAAK,EAAE,MAAM,EAAE;AACrB,aAAO;AAAA,QACH,KAAK;AAAA,QACL,WAAW;AAAA,MACf;AAAA,IACJ;AACA,YAAQ,UAAU,CAAC,EAAE,KAAK,UAAU,GAAG,UAAU;AAC7C,YAAM,cAAc,OAAO,YAAY,CAAC;AACxC,kBAAY,cAAc,OAAO,CAAC;AAClC,YAAM,OAAO,OAAO,OAAO,CAAC,OAAO,MAAM,GAAG,CAAC,GAAG,KAAK,WAAW,CAAC;AACjE,YAAM,IAAI,WAAW,UAAU,SAAS,EACnC,OAAO,IAAI,EACX,OAAO;AACZ,YAAM,KAAK,EAAE,MAAM,GAAG,EAAE;AACxB,YAAM,KAAK,EAAE,MAAM,EAAE;AACrB,aAAO;AAAA,QACH,KAAK;AAAA,QACL,WAAW;AAAA,MACf;AAAA,IACJ;AACA,YAAQ,eAAe,CAAC,YAAY,eAAe,SAAS;AACxD,YAAM,UAAU,KAAK,KAAK,QAAQ,SAAS,UAAU;AACrD,YAAM,SAAS,QAAQ,UAAU,SAAS,EAAE;AAC5C,YAAM,OAAO,OAAO,MAAM,GAAG,CAAC;AAC9B,aAAO,eACH,OAAO,OAAO,CAAC,MAAM,OAAO,KAAK,MAAM,CAAC,CAAC,IACzC,OAAO,KAAK,MAAM;AAAA,IAC1B;AACA,YAAQ,cAAc,CAAC,SAAS;AAC5B,UAAI,CAAC,QAAQ,UAAU,KAAK,IAAI,GAAG;AAC/B,eAAO;AAAA,MACX;AACA,aAAO,CAAC,KACH,MAAM,GAAG,EACT,MAAM,CAAC,EACP,IAAI,QAAQ,aAAa,EACzB,KAAK,KAAK;AAAA,IACnB;AACA,YAAQ,aAAa,CAAC,MAAM,MAAM,SAAS,oBAAoB;AAC3D,UAAI,CAAC,QAAQ,YAAY,IAAI,GAAG;AAC5B,cAAM,IAAI,MAAM,yBAAyB;AAAA,MAC7C;AACA,YAAM,EAAE,KAAK,UAAU,IAAI,QAAQ,qBAAqB,IAAI;AAC5D,YAAM,WAAW,KACZ,MAAM,GAAG,EACT,MAAM,CAAC,EACP,IAAI,QAAQ,aAAa,EACzB,IAAI,QAAM,SAAS,IAAI,EAAE,CAAC;AAC/B,aAAO,SAAS,OAAO,CAAC,YAAY,YAAY,QAAQ,QAAQ,YAAY,UAAU,MAAM,GAAG,EAAE,KAAK,UAAU,CAAC;AAAA,IACrH;AAAA;AAAA;",
  "names": []
}
